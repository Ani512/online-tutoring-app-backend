/*
 * This file is generated by jOOQ.
 */
package onlinetutoring.com.teamelevenbackend.entity.tables.daos;


import java.util.List;
import java.util.Optional;

import onlinetutoring.com.teamelevenbackend.entity.tables.Internal;
import onlinetutoring.com.teamelevenbackend.entity.tables.records.InternalRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InternalDao extends DAOImpl<InternalRecord, onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Internal, Integer> {

    /**
     * Create a new InternalDao without any configuration
     */
    public InternalDao() {
        super(Internal.INTERNAL, onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Internal.class);
    }

    /**
     * Create a new InternalDao with an attached configuration
     */
    public InternalDao(Configuration configuration) {
        super(Internal.INTERNAL, onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Internal.class, configuration);
    }

    @Override
    public Integer getId(onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Internal object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Internal> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Internal.INTERNAL.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Internal> fetchById(Integer... values) {
        return fetch(Internal.INTERNAL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Internal fetchOneById(Integer value) {
        return fetchOne(Internal.INTERNAL.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Internal> fetchOptionalById(Integer value) {
        return fetchOptional(Internal.INTERNAL.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Internal> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Internal.INTERNAL.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Internal> fetchByName(String... values) {
        return fetch(Internal.INTERNAL.NAME, values);
    }
}
