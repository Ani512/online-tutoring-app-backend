/*
 * This file is generated by jOOQ.
 */
package onlinetutoring.com.teamelevenbackend.entity.tables.records;


import onlinetutoring.com.teamelevenbackend.entity.tables.Users;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record9<Integer, String, String, String, String, Integer, Boolean, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.id</code>.
     */
    public UsersRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.users.f_name</code>.
     */
    public UsersRecord setFName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users.f_name</code>.
     */
    public String getFName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.l_name</code>.
     */
    public UsersRecord setLName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.users.l_name</code>.
     */
    public String getLName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    public UsersRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users.password</code>.
     */
    public UsersRecord setPassword(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.users.password</code>.
     */
    public String getPassword() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.users.total_hours</code>.
     */
    public UsersRecord setTotalHours(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.users.total_hours</code>.
     */
    public Integer getTotalHours() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.users.tutor</code>.
     */
    public UsersRecord setTutor(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.users.tutor</code>.
     */
    public Boolean getTutor() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.users.profile_pic</code>.
     */
    public UsersRecord setProfilePic(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.users.profile_pic</code>.
     */
    public String getProfilePic() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.users.about_me</code>.
     */
    public UsersRecord setAboutMe(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.users.about_me</code>.
     */
    public String getAboutMe() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, String, Integer, Boolean, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, String, String, String, Integer, Boolean, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.F_NAME;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.L_NAME;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public Field<Integer> field6() {
        return Users.USERS.TOTAL_HOURS;
    }

    @Override
    public Field<Boolean> field7() {
        return Users.USERS.TUTOR;
    }

    @Override
    public Field<String> field8() {
        return Users.USERS.PROFILE_PIC;
    }

    @Override
    public Field<String> field9() {
        return Users.USERS.ABOUT_ME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFName();
    }

    @Override
    public String component3() {
        return getLName();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getPassword();
    }

    @Override
    public Integer component6() {
        return getTotalHours();
    }

    @Override
    public Boolean component7() {
        return getTutor();
    }

    @Override
    public String component8() {
        return getProfilePic();
    }

    @Override
    public String component9() {
        return getAboutMe();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFName();
    }

    @Override
    public String value3() {
        return getLName();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getPassword();
    }

    @Override
    public Integer value6() {
        return getTotalHours();
    }

    @Override
    public Boolean value7() {
        return getTutor();
    }

    @Override
    public String value8() {
        return getProfilePic();
    }

    @Override
    public String value9() {
        return getAboutMe();
    }

    @Override
    public UsersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setFName(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setLName(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value6(Integer value) {
        setTotalHours(value);
        return this;
    }

    @Override
    public UsersRecord value7(Boolean value) {
        setTutor(value);
        return this;
    }

    @Override
    public UsersRecord value8(String value) {
        setProfilePic(value);
        return this;
    }

    @Override
    public UsersRecord value9(String value) {
        setAboutMe(value);
        return this;
    }

    @Override
    public UsersRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, Boolean value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer id, String fName, String lName, String email, String password, Integer totalHours, Boolean tutor, String profilePic, String aboutMe) {
        super(Users.USERS);

        setId(id);
        setFName(fName);
        setLName(lName);
        setEmail(email);
        setPassword(password);
        setTotalHours(totalHours);
        setTutor(tutor);
        setProfilePic(profilePic);
        setAboutMe(aboutMe);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setId(value.getId());
            setFName(value.getFName());
            setLName(value.getLName());
            setEmail(value.getEmail());
            setPassword(value.getPassword());
            setTotalHours(value.getTotalHours());
            setTutor(value.getTutor());
            setProfilePic(value.getProfilePic());
            setAboutMe(value.getAboutMe());
        }
    }
}
