/*
 * This file is generated by jOOQ.
 */
package onlinetutoring.com.teamelevenbackend.entity.tables.records;


import onlinetutoring.com.teamelevenbackend.entity.tables.Tutors;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TutorsRecord extends UpdatableRecordImpl<TutorsRecord> implements Record2<Integer, String[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tutors.id</code>.
     */
    public TutorsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.tutors.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.tutors.subjects</code>.
     */
    public TutorsRecord setSubjects(String[] value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.tutors.subjects</code>.
     */
    public String[] getSubjects() {
        return (String[]) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String[]> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String[]> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Tutors.TUTORS.ID;
    }

    @Override
    public Field<String[]> field2() {
        return Tutors.TUTORS.SUBJECTS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String[] component2() {
        return getSubjects();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String[] value2() {
        return getSubjects();
    }

    @Override
    public TutorsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TutorsRecord value2(String[] value) {
        setSubjects(value);
        return this;
    }

    @Override
    public TutorsRecord values(Integer value1, String[] value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TutorsRecord
     */
    public TutorsRecord() {
        super(Tutors.TUTORS);
    }

    /**
     * Create a detached, initialised TutorsRecord
     */
    public TutorsRecord(Integer id, String[] subjects) {
        super(Tutors.TUTORS);

        setId(id);
        setSubjects(subjects);
    }

    /**
     * Create a detached, initialised TutorsRecord
     */
    public TutorsRecord(onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors value) {
        super(Tutors.TUTORS);

        if (value != null) {
            setId(value.getId());
            setSubjects(value.getSubjects());
        }
    }
}
