/*
 * This file is generated by jOOQ.
 */
package onlinetutoring.com.teamelevenbackend.entity.tables.daos;


import java.util.List;
import java.util.Optional;

import onlinetutoring.com.teamelevenbackend.entity.tables.Tutors;
import onlinetutoring.com.teamelevenbackend.entity.tables.records.TutorsRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TutorsDao extends DAOImpl<TutorsRecord, onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors, Integer> {

    /**
     * Create a new TutorsDao without any configuration
     */
    public TutorsDao() {
        super(Tutors.TUTORS, onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors.class);
    }

    /**
     * Create a new TutorsDao with an attached configuration
     */
    public TutorsDao(Configuration configuration) {
        super(Tutors.TUTORS, onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors.class, configuration);
    }

    @Override
    public Integer getId(onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Tutors.TUTORS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors> fetchById(Integer... values) {
        return fetch(Tutors.TUTORS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors fetchOneById(Integer value) {
        return fetchOne(Tutors.TUTORS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors> fetchOptionalById(Integer value) {
        return fetchOptional(Tutors.TUTORS.ID, value);
    }

    /**
     * Fetch records that have <code>subjects BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors> fetchRangeOfSubjects(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(Tutors.TUTORS.SUBJECTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subjects IN (values)</code>
     */
    public List<onlinetutoring.com.teamelevenbackend.entity.tables.pojos.Tutors> fetchBySubjects(String[]... values) {
        return fetch(Tutors.TUTORS.SUBJECTS, values);
    }
}
